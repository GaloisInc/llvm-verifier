include "SHA384-Ops.cry";

theorem sha384_Ch_eq : {x y z}. sha384_gcrypt_Ch (x,y,z) == Ch (x,y,z);
theorem sha384_Maj_eq : {x y z}. sha384_gcrypt_Maj (x,y,z) == Maj (x,y,z);
theorem sha384_UpperSigma_0_eq : {x}. sha384_gcrypt_UpperSigma_0 (x) == UpperSigma_0 (x);
theorem sha384_UpperSigma_1_eq : {x}. sha384_gcrypt_UpperSigma_1 (x) == UpperSigma_1 (x);
theorem sha384_LowerSigma_0_eq : {x}. sha384_gcrypt_LowerSigma_0 (x) == LowerSigma_0 (x);
theorem sha384_LowerSigma_1_eq : {x}. sha384_gcrypt_LowerSigma_1 (x) == LowerSigma_1 (x);

extern AIG sha384_gcrypt_Ch("impl_AIGs/Ch.aig")                     : ([64],[64],[64]) -> [64];
extern AIG sha384_gcrypt_Maj("impl_AIGs/Maj.aig")                   : ([64],[64],[64]) -> [64];
extern AIG sha384_gcrypt_UpperSigma_0("impl_AIGs/UpperSigma_0.aig") : [64] -> [64];
extern AIG sha384_gcrypt_UpperSigma_1("impl_AIGs/UpperSigma_1.aig") : [64] -> [64];
extern AIG sha384_gcrypt_LowerSigma_0("impl_AIGs/LowerSigma_0.aig") : [64] -> [64];
extern AIG sha384_gcrypt_LowerSigma_1("impl_AIGs/LowerSigma_1.aig") : [64] -> [64];
