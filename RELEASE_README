This directory contains executables and support files for the LLVM
Symbolic Simulator (lss).

CONTENTS (Version 0.2b Feb 2013)

doc/           : lss man page
tutorial/      : Tutorials on using lss
bin/           : Command-line executables
test-programs/ : libgcrypt example code and proof scripts

NEW IN THIS RELEASE

Bug fixes:

- The type of the built-in 'free' function is now correct.

KNOWN ISSUES, LIMITATIONS, AND QUIRKS

Lightly tested:

- Execution of code generated with -m32 (or on 32 bit architectures); we suspect
  that there will be a few small tweaks needed to fully support this (sanity
  check parsed target data, implement additional intrinsic forms, etc.).
- llvm-optimized versions of our test codes (may expose missing
  instruction/intrinsic support)
- The lss_eval_aiger_array_* family of sigfuns

Nonexistent, limited, or untested support for:

- Codes compiled from C++
- Some vector instructions
- Exception handling (including setjmp/longjmp-style exception handling)
- clang and gcc builtins that can show up in compiled codes; we do not have
  implementations of these yet, and so cannot support them.  A short-term
  workaround is for the user to provide small implementations of these in C and
  link them into the final program executed by lss.
- LLVM intrinsics other than:
  - llvm.memcpy.p0i8.p0i8.i64
  - llvm.memset.p0i8.i64
  - llvm.uadd.with.overflow.i64
  - llvm.objectsizei32/64
- User-definable memory segmentation
- Big-endian architectures
- Non-x86 architectures

Quirks:

- Our printf implementation of format string %p will currently fail if given a
  pointer to a uint8_t.
